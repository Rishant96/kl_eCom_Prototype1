@model kl_eCom.Web.Areas.Vendors.Models.StoreIndexViewModel
@{
    ViewBag.Title = "Index";
}

<h2>Stores</h2>

@Html.ActionLink("+ Create Your Store", "Create", new { id = ViewBag.VendorId })

@foreach (var store in Model.Stores)
{
    <br /><br />
    <text>Store: </text>@Html.ActionLink(store.Name, "Index", controllerName: "Category", routeValues: new { id = store.Id }, htmlAttributes: null)
    <text> (</text>@Html.ActionLink("Details", "Details", new { id = store.Id })<text>)</text>
    <table class="table">
        <tr>
            <th>
                @Html.Label("Id")
            </th>
            <th>
                @Html.Label("Name")
            </th>
            <th>
                @Html.Label("Description")
            </th>
            <th>
                @Html.Label("Category")
            </th>
            <th>
                @Html.Label("Stock")
            </th>
            <th>
                @Html.Label("Price")
            </th>
            <th>

            </th>
        </tr>
        @{
            var stockedProducts = Model.Stocks[store];
        }
        @foreach (var stkProd in stockedProducts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(m => stkProd.Id)
                </td>
                <td>
                    @Html.ActionLink(stkProd.Product.Name, "Stock", "Product", new { prodId = stkProd.ProductId, storeId = stkProd.StoreId }, null)
                </td>
                <td>
                    @Html.DisplayFor(m => stkProd.Product.Description)
                </td>
                <td>
                    @Html.DisplayFor(m => stkProd.Product.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(m => stkProd.CurrentStock)
                </td>
                <td>
                    @Html.DisplayFor(m => stkProd.Price)
                </td>
                <td></td>
            </tr>
        }
    </table>
    <br />
}