@model kl_eCom.Web.Models.ShopProductsViewModel
@{
    /**/
    Layout = "~/Views/Shared/_ProductsLayout.cshtml";
    ViewBag.Title = Model.Breadcrum.Keys.ElementAt(Model.Breadcrum.Keys.Count - 1);
    var store = new { Id = Model.Breadcrum.First().Value, Name = Model.Breadcrum.First().Key };
    var count = Model.Breadcrum.Keys.Count;
}

@for (int i = 0; i < count; i++)
{
    var name = Model.Breadcrum.Keys.ElementAt(i);
    if (i == count - 1)
    {
        <text> @name </text>
    }
    else if (i == 0)
    {
        @Html.ActionLink(store.Name, "Index", new { id = store.Id })
        <text> > </text>
    }
    else
    {
        @Html.ActionLink(Model.Breadcrum.Keys.ElementAt(i), "Index", new { id = store.Id, catId = Model.Breadcrum[name] })
        <text> > </text>
    }
}
<br />

<div class="row">
    <div id="filterPanel" class="col-md-3">
        Filtering Options
    </div>
    <div class="col-md-9">
        <div class="row" id="sortPanel">
            @Html.Label("Sort By:", new { @class = "col-md-offset-9 col-md-1" })
            Dropdown
        </div>
        <div id="productsPanel">
            @if (ViewBag.flag)
            {
                <text>
                <div class="alert alert-success alert-dismissible" style="width: 800px;">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Cart Updated</strong> Product added to @Html.ActionLink("cart", "Index", controllerName: "Cart").
                </div>
                </text>
            }
            <div class="row">
                @foreach (var stock in Model.Stocks)
                {
                    using (Html.BeginForm(new { stockId = stock.Id }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="col-md-3">
                            <div>
                                <img class="img-thumbnail" width="160" height="100"
                                     src="@Url.Action("GetThumbnail", "Product",
                                new { area = "Vendors", id = stock.ProductId })" />
                            </div>

                            <div>
                                @Html.DisplayNameFor(m => stock.Product.Name) : @Html.DisplayFor(m => stock.Product.Name)
                            </div>

                            <div>
                                @Html.DisplayNameFor(m => stock.Price) : @Html.DisplayFor(m => stock.Price)
                            </div>
                            @{
                                var inStock = true;
                                var stockList = new List<int>();
                                if (stock.CurrentStock == 0)
                                {
                                    inStock = false;
                                }
                                else
                                {
                                    for (int i = 1; i <= Model.Max[stock.Id]; i++)
                                    {
                                        stockList.Add(i);
                                    }
                                }
                                var qtyList = new SelectList(stockList);

                                if (!inStock)
                                {
                                    @Html.Label("Out Of Stock")
                                }
                                else
                                {
                                    @Html.DropDownListFor(m => m.Qty, qtyList)
                                    <input type="submit" value="Add To Cart" />
                                }
                            }
                        </div>
                    }

                }
            </div>
        </div>
    </div>
</div>