@model kl_eCom.Web.Areas.Vendors.Models.HomeRegisterViewModel
@{
    ViewBag.Title = "Register";
}
<h2>Register - Vendor</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary()
    
<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(m => m.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.UserName, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.FirstName, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.LastName, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.BusinessName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.BusinessName, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.BusinessName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Email, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Mobile, "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Password, "", new { htmlAttributes = new { id = "password", @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            <input type="checkbox" id="showPswrd" style="position: relative; top: 2px; margin-right: 0px;" />
            show password
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.WebsiteUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            http://
            @Html.EditorFor(m => m.WebsiteUrl, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.WebsiteUrl, "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>Address:</h4>

    <div class="form-group">
        @Html.LabelFor(m => m.Line1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Line1, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Line1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Line2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Line2, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Line2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Line3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Line3, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Line3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Zip, "", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Zip, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedCountry, new SelectList(Model.Countries, "Value", "Text"), "Please select a country", new {
                @class = "form-control", id = "Country" })
            @Html.ValidationMessageFor(m => m.SelectedCountry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("State", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedState, new SelectList(Model.States, "Value", "Text"), new {
                @class = "form-control", id = "State" })
            @Html.ValidationMessageFor(m => m.SelectedState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedCity, new SelectList(Model.Cities, "Value", "Text"), new {
                @class = "form-control", id = "City" })
            @Html.ValidationMessageFor(m => m.SelectedCity, "", new { @class = "text-danger" })
        </div>
    </div>

    <input type="submit" class="col-md-offset-2 btn btn-primary" value="Register" />
</div>
}

@section scripts {
<script>
    $(document).ready(function () {
        $('#showPswrd').click(function () {
            var checked = $(this).is(":checked");
            if (checked) {
                $("#password").attr("type", "text");
            } else {
                $("#password").attr("type", "password");
            }
        });

        $('#Country').change(function () {
            var selectedCountry = $('#Country').val();
            var statesSelect = $('#State');
            statesSelect.empty();
            if (selectedCountry != null && selectedCountry != "") {
                $.getJSON('@Url.Action("GetStates")', { idStr: selectedCountry }, function (states) {
                    if (states != null && !jQuery.isEmptyObject(states)) {
                        statesSelect.append($('<option/>', {
                            value: null,
                            text: "--- Select a state ---"
                        }));
                        $.each(states, function (index, state) {
                            statesSelect.append($('<option/>', {
                                value: state.Value,
                                text: state.Text
                            }));
                        });
                    };
                });
            }
        });

        $('#State').change(function () {
            var selectedState = $('#State').val();
            var citiesSelect = $('#City');
            citiesSelect.empty();
            if (selectedState != null && selectedState != "") {
                $.getJSON('@Url.Action("GetCities")', { idStr: selectedState }, function (cities) {
                    if (cities != null && !jQuery.isEmptyObject(cities)) {
                        citiesSelect.append($('<option/>', {
                            value: null,
                            text: "--- Select a city ---"
                        }));
                        $.each(cities, function (index, state) {
                            citiesSelect.append($('<option/>', {
                                value: state.Value,
                                text: state.Text
                            }));
                        });
                    };
                });
            }
        });
    });
</script>
}