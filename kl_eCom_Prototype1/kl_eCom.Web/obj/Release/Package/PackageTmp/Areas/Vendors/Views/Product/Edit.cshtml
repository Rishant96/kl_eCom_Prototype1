@model kl_eCom.Web.Areas.Vendors.Models.ProductEditViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Product</h2>

@using (Html.BeginForm("Edit", "Product",
    FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Manufacturer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style = "width: 280px; height: 110px;" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DefaultGST, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="display: flex; align-items: center">
            @Html.EditorFor(m => m.DefaultGST, new { htmlAttributes = new { @class = "form-control",
            style = "width: 75px; margin-right: 10px"} })%
                @Html.ValidationMessageFor(m => m.DefaultGST, "", new { @class = "text-danger" })
            </div>
    </div>

    <div class="form-group">
        @Html.Label("Date Added", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.DateAdded, new { @class = "form-control", style = "width: 280px; height: 110px;" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.Label("Thumbnail", htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="thumbnail" id="thumbnail" style="margin-left: 30px; display: inline" />
            @if (Model.ThumbnailPath != null && Model.ThumbnailMimeType != null)
            {
                <text>
                    <img class="img-thumbnail" width="75" height="75"
                         src="@Url.Action("GetThumbnail", "Product",
                            new { Model.Id })"
                         style="display: inline" />
                </text>
            }
        </div>
    </div>

    <div class="form-group">@Html.Label("Specifications:", htmlAttributes: new { @class = "control-label col-md-2" })</div>
    <div class="form-group">
        @if (Model.AttributeNames == null) { Model.AttributeNames = new List<string>(); }
        @foreach (var atr in Model.AttributeNames)
        {
            <div class="form-group">
                @Html.Label(atr, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.HiddenFor(m => m.Attributes[atr])
                <div class="col-md-10">
                    @Html.EditorFor(m => m.Specifications[atr], new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Specifications[atr], "", new { @class = "text-danger" })
                </div>
            </div>
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.IsActive, new { htmlAttributes = new { @class = "checkbox" } })
            @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" id="submit-form" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
