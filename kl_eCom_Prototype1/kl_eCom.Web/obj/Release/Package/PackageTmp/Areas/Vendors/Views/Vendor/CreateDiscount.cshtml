@model kl_eCom.Web.Areas.Vendors.Models.VendorDiscountCreateViewModel
@{
    ViewBag.Title = "Create - Discount";
    Layout = "~/Areas/Vendors/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Discount - Create</h2>

    @using (@Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    <div class="container" style="display: flex; margin-right: 50px">
        <div class="form-horizontal" style="width: 48%">
            
            <div class="form-group">
                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style = "width: 280px; height: 110px;" })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.StartDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(m => m.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.IsExpirable, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(m => m.IsExpirable, new { htmlAttributes = new { id = "expiry", @class = "form-control, checkbox" } })
                    @Html.ValidationMessageFor(m => m.IsExpirable, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ValidityPeriod, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(m => m.ValidityPeriod, new { htmlAttributes = new { id = "validTxt", @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.ValidityPeriod, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.IsActive, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(m => m.IsActive, new { htmlAttributes = new { @class = "form-control, checkbox" } })
                    @Html.ValidationMessageFor(m => m.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Value, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div style="display: flex; justify-content: space-around; margin-right: 80px; margin-top: 10px; margin-bottom: 10px">
                        <div>
                            <input type="radio" name="IsInPercent"
                                   value="1" checked />
                            <label>In Percent</label>
                        </div>
                        <div>
                            <input type="radio" name="IsInPercent"
                                   value="2" />
                            <label>In Currency</label>
                        </div>
                    </div>
                    @Html.EditorFor(m => m.Value, new { htmlAttributes = new { @class = "form-control", name = "Model.Value" } })
                    @Html.ValidationMessageFor(m => m.Value, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" class="btn btn-info col-md-offset-10" style="position: relative; left: 10px; top: 10px"
                   value="Create" />
        </div>
        <div class="row" style="width: 50%">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <h3 style="margin-top: 0">Select Discounted Products:</h3>
            <input type="hidden" id="catCount" value="@Model.AvailableCategories.Count" />
            <div class="row">
                @foreach (var cat in Model.AvailableCategories)
                {
                    int i = 1;
                    <div class="col-md-offset-1 col-md-4 col-md-offset-1">
                        <div>
                            <label style="margin: auto 5px">Category -  @cat.Name</label>
                            <hr style="margin-top: 5px; margin-bottom: 15px" />
                        </div>
                        <div style="margin-left: 30px">
                            <input type="hidden" id="@string.Format("prodCount{0}", i++)"
                                   value="@Model.AvailableProducts.Count" />
                            <table class="table-striped table-bordered">
                                @foreach (var prod in Model.AvailableProducts[cat])
                                {
                                    <tr>
                                        <td style="padding: 5px 10px">
                                            @Html.DisplayFor(m => prod.Name)
                                        </td>
                                        <td style="padding: 5px 10px">
                                            <input type="checkbox" name="Products"
                                                   class="@string.Format("cat{0}",cat.Id)"
                                                   id="@string.Format("prod{0}", prod.Id)"
                                                   value="@prod.Id" />
                                        </td>
                                    </tr>
                                }
                            </table>
                            <div style="text-align: right; margin-right: 10px">
                                <h6 id="unmark" style="display: inline">Un-</h6>
                                <h6 style="display: inline">Mark All <br />@cat.Name</h6>
                                <input type="checkbox" class="checkbox-inline all-select"
                                       style="display: inline; position: relative; bottom: 3px; left: 2px"
                                       value="@cat.Id" id="@string.Format("all{0}", cat.Id)" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div>
                <h3>Select Discount Type</h3>
            </div>
            <hr />
            <div class="row" style="margin-right: 20px; margin-left: 10px">
                <div class="col-md-3">
                    <input id="typeItm1" type="radio" name="Type" value="1" checked />
                    <label>Simple</label>
                </div>

                <div class="col-md-3">
                    <input id="typeItm2" type="radio" name="Type" value="2" />
                    <label>Min. Order</label>
                </div>

                <div class="col-md-3">
                    <input id="typeItm3" type="radio" name="Type" value="3" />
                    <label>Bundle</label>
                </div>

                <div class="col-md-3">
                    <input id="typeItm3" type="radio" name="Type"
                           style="vertical-align: top" value="4" />
                    <label>Min. Qty<br />(Bulk)</label>
                </div>

                <div class="row" id="extraDiv" style="margin-left: 20px">
                    <label id="extra" class=""></label>
                    @Html.TextBoxFor(m => m.ExtraInfo, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    }
</div>

@section Scripts 
{
<script>
    $(document).ready(function () {

        $('#extraDiv').hide();

        $("#unmark").hide();

        $('#validTxt').prop('disabled', true);

        $('#expiry').click(function () {
            if ($(this).prop('checked')) {
                $('#validTxt').prop('disabled', false);
            }
            else {
                $('#validTxt').prop('disabled', true);
            }
        });

        $(".all-select").click(function () {
            $("#unmark").toggle();
            if ($(this).prop("checked") == true) {
                $(".cat" + $(this).val()).prop("checked", true);
            }
            else {
                $(".cat" + $(this).val()).prop("checked", false);
            }
        });

        $('input:radio[name=Type]').click(function () {
           
            if ($('#typeItm1').prop("checked")) {
                $('#extraDiv').hide();
            }
            else if ($('#typeItm3').prop("checked")) {
                $('#extra').html("Max. amount per user: ");
                $('#extraDiv').show();
            }
            else if ($('#typeItm2').prop("checked")) {
                $('#extra').html("Minimum Cart Value: ");
                $('#extraDiv').show();
            }
            else {
                $('#extra').html("Bulk Quantity: ");
                $('#extraDiv').show();
            }
        });
    });
</script>    
}